/*
 * Automatically generated by jrpcgen 1.1.6 on 24-8-23 上午9:09
 * jrpcgen is part of the "Remote Tea" ONC/RPC package for Java
 * See http://remotetea.sourceforge.net for details
 */
package xyz.hooy.vxi11.rpc.idl;
import org.acplt.oncrpc.*;
import java.io.IOException;

/** TODO */
public interface vxi11_DEVICE_CORE_CltIF {

    /**
     * Call remote procedure create_link_1.
     * @param arg1 parameter (of type Create_LinkParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Create_LinkResp).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Create_LinkResp create_link_1(Create_LinkParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_write_1.
     * @param arg1 parameter (of type Device_WriteParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_WriteResp).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_WriteResp device_write_1(Device_WriteParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_read_1.
     * @param arg1 parameter (of type Device_ReadParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_ReadResp).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_ReadResp device_read_1(Device_ReadParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_readstb_1.
     * @param arg1 parameter (of type Device_GenericParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_ReadStbResp).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_ReadStbResp device_readstb_1(Device_GenericParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_trigger_1.
     * @param arg1 parameter (of type Device_GenericParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_Error).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_Error device_trigger_1(Device_GenericParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_clear_1.
     * @param arg1 parameter (of type Device_GenericParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_Error).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_Error device_clear_1(Device_GenericParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_remote_1.
     * @param arg1 parameter (of type Device_GenericParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_Error).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_Error device_remote_1(Device_GenericParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_local_1.
     * @param arg1 parameter (of type Device_GenericParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_Error).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_Error device_local_1(Device_GenericParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_lock_1.
     * @param arg1 parameter (of type Device_LockParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_Error).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_Error device_lock_1(Device_LockParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_unlock_1.
     * @param arg1 parameter (of type Device_Link) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_Error).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_Error device_unlock_1(Device_Link arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_enable_srq_1.
     * @param arg1 parameter (of type Device_EnableSrqParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_Error).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_Error device_enable_srq_1(Device_EnableSrqParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure device_docmd_1.
     * @param arg1 parameter (of type Device_DocmdParms) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_DocmdResp).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_DocmdResp device_docmd_1(Device_DocmdParms arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure destroy_link_1.
     * @param arg1 parameter (of type Device_Link) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_Error).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_Error destroy_link_1(Device_Link arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure create_intr_chan_1.
     * @param arg1 parameter (of type Device_RemoteFunc) to the remote procedure call.
     * @return Result from remote procedure call (of type Device_Error).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_Error create_intr_chan_1(Device_RemoteFunc arg1) throws OncRpcException, IOException;

    /**
     * Call remote procedure destroy_intr_chan_1.
     * @return Result from remote procedure call (of type Device_Error).
     * @throws OncRpcException if an ONC/RPC error occurs.
     * @throws IOException if an I/O error occurs.
     */
    Device_Error destroy_intr_chan_1() throws OncRpcException, IOException;


}
// End of vxi11_DEVICE_CORE_CltIF.java
